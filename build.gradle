/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
        //springBootVersion = '1.5.14.RELEASE'
    }
    repositories {
       
        maven {                                
          url "http://prod.cpp.nexus.int.westgroup.com/Nexus/content/groups/cpp-all/"
    } 
    mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
//apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' 


// In this section you declare where to find the dependencies of your project
repositories {      
      	maven {
	       url  "https://tr1.jfrog.io/tr1/libs-release"
	        credentials {
	                 username  "$artifactory_user"
	                 password  "$artifactory_password"
	          }
        } 
       
       maven {
       		url  "https://tr1.jfrog.io/artifactory/jcenter-cache"
	        credentials {
	                 username  "$artifactory_user"
	                 password  "$artifactory_password"
	          }
       } 
        maven {                                
          url "http://prod.cpp.nexus.int.westgroup.com/Nexus/content/groups/cpp-all/"
    } 
    mavenLocal()
    }
    


dependencies {
   // This dependency is exported to consumers, that is to say found on their compile classpath.
    //compile("com.oracle:ojdbc6:11.2.0.3.0")
    compile("org.springframework:spring-jms")
	compile("org.slf4j:log4j-over-slf4j:1.7.25")   
    //compile("org.json:json:20151123")
    //compile("com.ibm:com.ibm.mqjms:7.5.0.5")
    //compile("com.ibm:com.ibm.mq:7.5.0.5")
    //compile("com.ibm:com.ibm.mq.jmqi:7.5.0.5")
     
    //compile("org.slf4j:slf4j-log4j12:1.7.25")
 
    //compile("org.slf4j:slf4j-simple:1.7.25") 
    //compile("org.slf4j:slf4j-api:1.7.25")  
    //compile("org.springframework.boot:spring-boot-starter-web")
    //testCompile("org.springframework.boot:spring-boot-starter-test")
    
    
    compile("com.ibm:com.ibm.mq:7.5.0.5")
    compile("com.ibm:connector:7.0.1.7")
    compile("com.ibm:com.ibm.mq.jmqi:7.5.0.5")
    compile("com.ibm:dhbcore:7.0.1.7")
    compile("jms:jms:1.3.1_02")
    compile("com.ibm:com.ibm.mqjms:7.5.0.5")
    
    compile("org.json:json:20151123")
    
     compile("org.springframework.boot:spring-boot-starter"){
     //exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 //exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    
     compile("org.springframework.boot:spring-boot-starter-web") {
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 }
    //compile('com.thomsonreuters.enterpriselogging:TRLoggingExtensions:41.0.0')
	//exclude log4j changes
	compile('org.springframework.boot:spring-boot-starter-data-rest') {
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 }
	compile('org.springframework.boot:spring-boot-starter-integration') {
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 }
	compile('org.springframework.boot:spring-boot-starter-web-services') {
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 }
	compile('org.springframework.boot:spring-boot-starter-websocket') {
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 }
	compile('org.springframework.integration:spring-integration-jms') {
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 }
	compile('com.west.judicial:CommonServicesFramework:3.0.0.46')  {
     exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: 'log4j'
	 }
	compile("org.apache.httpcomponents:httpclient")
		
	

	
    compile('io.netty:netty:3.8.0.Final')
    compile('io.netty:netty-all:4.1.16.Final')
    compile('de.codecentric:spring-boot-admin-server:1.5.4')
	compile('de.codecentric:spring-boot-admin-server-ui:1.5.4')
	compile('de.codecentric:spring-boot-admin-starter-client:1.5.4') 
    
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.6.2'
	// for NovusAPIResponse
	compile("com.google.code.gson:gson:2.8.5")
	 // for NovusInterfaceFactory
	//compile("log4j:log4j:1.2.16")

}
    jar {
    manifest {
        attributes(
                'Main-Class': 'LtcMainframeccherequestmqpostutilityApplication'
        )
    }
    from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

